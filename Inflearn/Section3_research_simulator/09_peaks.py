'''
# 문제 : 봉우리 #
지도 정보가 N*N 격자판에 주어집니다. 각 격자에는 그 지역의 높이가 쓰여있습니다.
각 격자 판의 숫자 중 자신의 상하좌우 숫자보다 큰 숫자는 봉우리 지역입니다. 봉우리 지역이 몇 개 있는 지 알아내는 프로그램을 작성하세요.
격자의 가장자리는 0으로 초기화 되었다고 가정한다.
만약 N=3 이고, 격자판의 숫자가 다음과 같다면 봉우리의 개수는 3개입니다.
0 0 0 0 0
0 1 2 3 0
0 3 2 1 0
0 2 3 5 0
0 0 0 0 0
'''
'''
1. i, j를 기준으로 이중 반복문을 돈다
2. i가 0이면 '위'는 체크하지 않는다.
3. j가 0이면 '왼쪽'은 체크하지 않는다.
4. j가 N-1 이면 '오른쪽'은 체크하지 않는다.
5. i가 N-1 이면 '아래'는 체크하지 않는다.

6. 위 변수상황을 제외하고는 '위, 아래, 왼쪽, 오른쪽'을 전부 비교해서 크면 cnt 를 1 늘려준다
 
'''
n = int(input())
arr = [list(map(int, input("arr : ").split())) for _ in range(n)]

# 입력받은 arr의 각각의 행에 맨 앞과 맨 뒤에 0을 각각 추가해 준다
for i in arr:
    i.append(0)
    i.insert(0, 0)

# 2중배열 arr의 0번째와 마지막에 각각 0으로 채워진 배열을 추가해준다
arr.insert(0, [0] * (n + 2))
arr.append([0] * (n + 2))
print(arr)

# 기준되는 9시부터 시계방향으로 검사를 해서 전부다 통과하면 카운트를 해준다
cnt = 0
for i in range(1, n+1):
    for j in range(1, n+1):
        if arr[i][j] > arr[i][j-1]:
            if arr[i][j] > arr[i-1][j]:
                if arr[i][j] > arr[i][j+1]:
                    if arr[i][j] > arr[i+1][j]:
                        cnt += 1

print(cnt)



